package components

import "fmt"

type ButtonValues struct {
	Value           string
	AdditionnalInfo string
	Latitude        string
	Longitude       string
}

templ DataList() {
	<div
		class="flex flex-col items-center"
		id="datalist"
		hx-swap-oob="outerHTML"
	>
		<h1 style="color: aliceblue;display:flex;justify-content:center" class="text-2xl font-bold">Recherche par villes</h1>
		<div id="search-zone">
			<input
				style="width: 20em"
				type="text"
				list="liste-ville"
				id="ville"
				name="ville"
				class="bg-gray-100 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-gray-400 dark:focus:ring-blue-500 dark:focus:border-blue-500"
				hx-get="/ville"
				hx-trigger="input changed delay:500ms"
				hx-target="#liste-ville"
			/>
			<div id="liste-ville"></div>
		</div>
		<!--<datalist id="liste-ville"></datalist> -->
	</div>
}

templ VilleButton(value, postcode, latitude, longitude string) {
	<button
		class="hover:bg-neutral-300 bg-white text-gray-600 font-bold py-2 px-4"
		hx-get={ "/temp?lat=" + latitude + "&lon=" + longitude }
		hx-trigger="click"
		hx-target="#weather-container"
		hx-params="none"
		class="bg-slate-50 text-gray-800 rounded p-2"
	>
		{ value + " (" + postcode + ")" }
	</button>
}

func getVilleButtonString(buttonValue ButtonValues) string {
	return fmt.Sprintf(
		"/temp?lat=%s&lon=%s&name=%s&addinfo=%s",
		buttonValue.Latitude,
		buttonValue.Longitude,
		buttonValue.Value,
		buttonValue.AdditionnalInfo,
	)
}

templ VilleButtonContainer(buttonsValues []ButtonValues) {
	<div
		class="flex flex-col items-stretch rounded overflow-hidden"
	>
		for _, buttonValue := range buttonsValues {
			<button
				class="hover:bg-neutral-300 bg-white text-gray-600 font-bold py-2 px-4"
				hx-get={ getVilleButtonString(buttonValue) }
				hx-trigger="click"
				hx-target="#weather-container"
				hx-params="none"
				class="bg-slate-50 text-gray-800 rounded p-2"
			>
					{ buttonValue.Value + " (" + buttonValue.AdditionnalInfo + ")" }
			</button>
		}
	</div>
}
